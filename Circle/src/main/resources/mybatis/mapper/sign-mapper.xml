<?xml version="1.0" encoding="UTF-8" ?>

<!-- DTD 선언 -->
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sign">
<!--  -->
<!-- signList page mapper start -->
	<select id="list" resultType="signList" parameterType="string">
		SELECT *
		  FROM (SELECT SI.SIGN_CODE
		   		     , ST.SIGN_TYPE_NAME
    				 , SI.SIGN_TITLE
    				 , EI.EMP_INFO_NAME
    				 , JI.JOB_INFO_NAME
    				 , TO_CHAR(SI.SIGN_WDAT, 'yyyy-mm-dd') AS SIGN_WDAT
            		 , TO_CHAR(SI.SIGN_WDAT, 'hh:dd') AS SIGN_WHOUR
    				 , TO_CHAR(SI.SIGN_EDAT, 'yyyy-mm-dd') AS SIGN_EDAT
            		 , TO_CHAR(SI.SIGN_EDAT, 'hh:dd') AS SIGN_EHOUR
            		 , SI.SIGN_STEP
            		 , SI.SIGN_COUNT
 		 		  FROM SIGN SI
 				  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		 		  JOIN JOB_INFO JI ON (JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
  				  JOIN SIGN_TYPE ST ON (ST.SIGN_TYPE_CODE = SI.SIGN_TYPE_CODE)
                  JOIN SIGN_JOIN SJ ON (SJ.SIGN_CODE = SI.SIGN_CODE)
 				 WHERE SI.SIGN_EDAT IS NULL
 			       AND (SJ.SIGN_JOIN_EMP_CODE = #{emp_info_emp_no} OR SI.SIGN_EMP_CODE = #{emp_info_emp_no})
                 GROUP BY SI.SIGN_CODE
                	    , ST.SIGN_TYPE_NAME
                        , SI.SIGN_TITLE
    				    , EI.EMP_INFO_NAME
                        , JI.JOB_INFO_NAME
    				    , SI.SIGN_WDAT
            		    , SI.SIGN_WDAT
    				    , SI.SIGN_EDAT
            		    , SI.SIGN_EDAT
            		    , SI.SIGN_STEP
            		    , SI.SIGN_COUNT
 			     ORDER BY SI.SIGN_CODE DESC
                )
            WHERE ROWNUM &lt; 6
	</select>
		
		
	<select id="listComplete" resultType="signList" parameterType="string">
		SELECT *
		  FROM (SELECT SI.SIGN_CODE
		   		     , ST.SIGN_TYPE_NAME
    				 , SI.SIGN_TITLE
    				 , EI.EMP_INFO_NAME
    				 , JI.JOB_INFO_NAME
    				 , TO_CHAR(SI.SIGN_WDAT, 'yyyy-mm-dd') AS SIGN_WDAT
            		 , TO_CHAR(SI.SIGN_WDAT, 'hh:dd') AS SIGN_WHOUR
    				 , TO_CHAR(SI.SIGN_EDAT, 'yyyy-mm-dd') AS SIGN_EDAT
            		 , TO_CHAR(SI.SIGN_EDAT, 'hh:dd') AS SIGN_EHOUR
            		 , SI.SIGN_STEP
            		 , SI.SIGN_COUNT
 		 		  FROM SIGN SI
 				  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		 		  JOIN JOB_INFO JI ON (JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
  				  JOIN SIGN_TYPE ST ON (ST.SIGN_TYPE_CODE = SI.SIGN_TYPE_CODE)
                  JOIN SIGN_JOIN SJ ON (SJ.SIGN_CODE = SI.SIGN_CODE)
 				 WHERE SI.SIGN_EDAT IS NOT NULL
 			       AND (SJ.SIGN_JOIN_EMP_CODE = #{emp_info_emp_no} OR SI.SIGN_EMP_CODE = #{emp_info_emp_no})
                 GROUP BY SI.SIGN_CODE
                	    , ST.SIGN_TYPE_NAME
                        , SI.SIGN_TITLE
    				    , EI.EMP_INFO_NAME
                        , JI.JOB_INFO_NAME
    				    , SI.SIGN_WDAT
            		    , SI.SIGN_WDAT
    				    , SI.SIGN_EDAT
            		    , SI.SIGN_EDAT
            		    , SI.SIGN_STEP
            		    , SI.SIGN_COUNT
 			     ORDER BY SI.SIGN_CODE DESC
                )
            WHERE ROWNUM &lt; 6
	</select>
	
	<select id="signJoinerCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
 		  FROM SIGN_JOIN
 		 WHERE SIGN_CODE = #{signCode}
 		   AND SIGN_JOIN_TYPE = 'Y'
 		   AND SIGN_JOIN_CHECK = 'N'
	</select>
	
	<select id="signJoinerCheck" resultType="signListJoiner">
		SELECT EI.EMP_INFO_NAME
     		 , JI.JOB_INFO_NAME
  		  FROM SIGN SI
 		  JOIN SIGN_JOIN SJ ON(SJ.SIGN_CODE = SI.SIGN_CODE)
  		  JOIN EMP_INFO EI ON(EI.EMP_INFO_EMP_NO = SJ.SIGN_JOIN_EMP_CODE)
  		  JOIN JOB_INFO JI ON(JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
 		 WHERE SJ.SIGN_JOIN_TYPE = 'Y'
   		   AND SJ.SIGN_JOIN_CHECK = 'N'
   		   AND SI.SIGN_CODE = #{signCode}
 		 ORDER BY JI.JOB_INFO_CODE ASC	
	</select>
	
	
  	<select id="signJoiner" resultType="signListJoiner" >
		SELECT EI.EMP_INFO_NAME
			 , EI.EMP_INFO_EMP_NO
     		 , JI.JOB_INFO_NAME
  		  FROM SIGN SI
 		  JOIN SIGN_JOIN SJ ON(SJ.SIGN_CODE = SI.SIGN_CODE)
  		  JOIN EMP_INFO EI ON(EI.EMP_INFO_EMP_NO = SJ.SIGN_JOIN_EMP_CODE)
  		  JOIN JOB_INFO JI ON(JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
 		 WHERE SJ.SIGN_JOIN_TYPE = 'Y'
   		   AND SI.SIGN_CODE = #{signCode}
 		 ORDER BY JI.JOB_INFO_CODE ASC
	</select>

  	<select id="signJoinerCode" resultType="signListJoiner" >
		SELECT EI.EMP_INFO_EMP_NO
			 , SJ.SIGN_JOIN_CHECK
  		  FROM SIGN SI
 		  JOIN SIGN_JOIN SJ ON(SJ.SIGN_CODE = SI.SIGN_CODE)
  		  JOIN EMP_INFO EI ON(EI.EMP_INFO_EMP_NO = SJ.SIGN_JOIN_EMP_CODE)
  		  JOIN JOB_INFO JI ON(JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
 		 WHERE SJ.SIGN_JOIN_TYPE = 'Y'
   		   AND SI.SIGN_CODE = #{signCode}
 		 ORDER BY JI.JOB_INFO_CODE ASC
	</select>
	
 	<select id="signWatcher" resultType="signListJoiner" >
		SELECT EI.EMP_INFO_NAME
			 , EI.EMP_INFO_EMP_NO
     		 , JI.JOB_INFO_NAME
  		  FROM SIGN SI
 		  JOIN SIGN_JOIN SJ ON(SJ.SIGN_CODE = SI.SIGN_CODE)
  		  JOIN EMP_INFO EI ON(EI.EMP_INFO_EMP_NO = SJ.SIGN_JOIN_EMP_CODE)
  		  JOIN JOB_INFO JI ON(JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
 		 WHERE SJ.SIGN_JOIN_TYPE = 'N'
   		   AND SI.SIGN_CODE = #{signCode}
 		 ORDER BY JI.JOB_INFO_CODE ASC
	</select>
	
	  	<select id="signWatcherCode" resultType="signListJoiner" >
		SELECT EI.EMP_INFO_EMP_NO
			 , SI.SIGN_COUNT
  		  FROM SIGN SI
 		  JOIN SIGN_JOIN SJ ON(SJ.SIGN_CODE = SI.SIGN_CODE)
  		  JOIN EMP_INFO EI ON(EI.EMP_INFO_EMP_NO = SJ.SIGN_JOIN_EMP_CODE)
  		  JOIN JOB_INFO JI ON(JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
 		 WHERE SJ.SIGN_JOIN_TYPE = 'N'
   		   AND SI.SIGN_CODE = #{signCode}
 		 ORDER BY JI.JOB_INFO_CODE ASC
	</select>
<!-- signList page mapper end -->
	

<!-- signSelectOne page mapper start -->
	<select id="signSelectOne" parameterType="string" resultType="signSelectOne">
		SELECT ST.SIGN_TYPE_NAME
    		 , SI.SIGN_TITLE
             , SI.SIGN_NOTE
             , SI.SIGN_EMP_CODE
    		 , EI.EMP_INFO_NAME
    		 , JI.JOB_INFO_NAME
    		 , TO_CHAR(SI.SIGN_WDAT, 'yyyy-mm-dd') AS SIGN_WDAT
             , TO_CHAR(SI.SIGN_WDAT, 'hh:dd') AS SIGN_WHOUR
    		 , TO_CHAR(SI.SIGN_EDAT, 'yyyy-mm-dd') AS SIGN_EDAT
             , TO_CHAR(SI.SIGN_EDAT, 'hh:dd') AS SIGN_EHOUR
             , SI.SIGN_STEP
             , SI.SIGN_COUNT
 		  FROM SIGN SI
 		  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		  JOIN JOB_INFO JI ON (JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
  		  JOIN SIGN_TYPE ST ON (ST.SIGN_TYPE_CODE = SI.SIGN_TYPE_CODE)
 		 WHERE SI.SIGN_CODE = #{signCode}		
	</select>
<!-- signSelectOne page mapper end -->


<!-- signWrite page mapper start -->
	<!-- create one sign case start -->
	<select id="signTypeList" resultType="signType">
		SELECT * FROM SIGN_TYPE
	</select>
	
	<select id="seqSign" resultType="String">
		SELECT SIGN_SEQ.NEXTVAL FROM DUAL
	</select>
	
	<insert id="signWriteInsert" parameterType="signWriteInsert">
		INSERT INTO SIGN(SIGN_CODE
					   , SIGN_TYPE_CODE
					   , SIGN_KEEP
					   , SIGN_ACC
					   , SIGN_TITLE
					   , SIGN_NOTE
					   , SIGN_STATUS
					   , SIGN_WDAT
					   , SIGN_EDAT
					   , SIGN_EMP_CODE
					   , SIGN_STEP
					   , SIGN_COUNT
					   , SIGN_OCOUNT) VALUES ('SIGN'||TRIM(TO_CHAR(#{seqSign},'000000'))
     	         						  , #{sign_type_code}
      		     						  , SYSDATE+#{sign_keep}
              	 						  , #{sign_acc}
                						  , #{sign_title}
          	   							  , #{sign_note}
          	    						  , 'N'
           	    						  , SYSDATE
           	    						  , NULL
           	    						  , #{sign_emp_code}
                						  , 'SIPC000001'
                						  , #{sign_count}
                						  , #{sign_count})
	</insert>
	
	<select id="seqSignJoiner" resultType="String">
		SELECT SIJC_SEQ.NEXTVAL FROM DUAL
	</select>
	
	<insert id="signWriteJoiner" parameterType="map">
		INSERT INTO SIGN_JOIN(SIGN_JOIN_CODE
							, SIGN_JOIN_EMP_CODE
							, SIGN_JOIN_TYPE
							, SIGN_JOIN_CHECK
							, SIGN_JOIN_DATE
							, SIGN_CODE) VALUES ('SIJC'||TRIM(TO_CHAR(#{seqSignJoiner},'000000'))
				  							  , #{sign_join_emp_code}
				  							  , 'Y'
				 							  , 'N'
				  							  , NULL
											  , ('SIGN'||TRIM(TO_CHAR(#{seqSign},'000000'))))
	</insert>
	
	
	<insert id="signWriteWatcher" parameterType="map">
		INSERT INTO SIGN_JOIN(SIGN_JOIN_CODE
							, SIGN_JOIN_EMP_CODE
							, SIGN_JOIN_TYPE
							, SIGN_JOIN_CHECK
							, SIGN_JOIN_DATE
							, SIGN_CODE) VALUES ('SIJC'||TRIM(TO_CHAR(#{seqSignJoiner},'000000'))
				  							  , #{sign_join_emp_code}
				  							  , 'N'
				 							  , 'N'
				  							  , NULL
											  , ('SIGN'||TRIM(TO_CHAR(#{seqSign},'000000'))))
	</insert>

	<insert id="signProcessAdd1" parameterType="String">
		INSERT INTO SIGN_PROCESS VALUES('SIPC000001'
				  , ('SIGN'||TRIM(TO_CHAR(#{seqSign},'000000')))
				  , SYSDATE)
	</insert>

	
	<!-- insert signfiles -->	
	<select id="seqSignFilesCurrval" resultType="String">
		SELECT LAST_NUMBER FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'SIGN_SEQ'
	</select>
	
	<select id="seqSignFiles" resultType="String">
		SELECT FILE_SEQ.NEXTVAL FROM DUAL
	</select>
	
	<insert id="signFiles" parameterType="map">
		INSERT INTO FILES(FILES_CODE
						, FILES_ONAME
						, FILES_CNAME
						, FILES_ROUTE
						, FILES_DATE
						, FILES_TYPE
						, FILES_STATUS
						, FILES_SIZE) VALUES ('FILE'||TRIM(TO_CHAR(#{seqSignFiles},'000000'))
										   , #{files_oname}
										   , #{files_cname}
										   , #{files_route}
										   , SYSDATE
										   , ('SIGN'||TRIM(TO_CHAR(#{seqSignFilesCurrval},'000000')))
										   , 'N'
										   , #{files_size})
	</insert>
<!-- create one sign case end -->

<!-- modify one sign case start -->
	<select id="signModify" resultType="signModify">
		SELECT ST.SIGN_TYPE_NAME
			 , SI.SIGN_TYPE_CODE
    		 , SI.SIGN_TITLE
             , SI.SIGN_KEEP-SI.SIGN_WDAT AS SIGN_KEEP
             , SI.SIGN_NOTE
             , SI.SIGN_ACC
             , SI.SIGN_EMP_CODE
    		 , EI.EMP_INFO_NAME
    		 , JI.JOB_INFO_NAME
    		 , TO_CHAR(SI.SIGN_WDAT, 'yyyy-mm-dd') AS SIGN_WDAT
             , TO_CHAR(SI.SIGN_WDAT, 'hh:dd') AS SIGN_WHOUR
    		 , TO_CHAR(SI.SIGN_EDAT, 'yyyy-mm-dd') AS SIGN_EDAT
             , TO_CHAR(SI.SIGN_EDAT, 'hh:dd') AS SIGN_EHOUR
             , SI.SIGN_STEP
             , SI.SIGN_COUNT
             , SI.SIGN_CODE
 		  FROM SIGN SI
 		  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		  JOIN JOB_INFO JI ON (JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
  		  JOIN SIGN_TYPE ST ON (ST.SIGN_TYPE_CODE = SI.SIGN_TYPE_CODE)
 		 WHERE SI.SIGN_CODE = #{signCode}	
	</select>
	
 	<select id="signModifyJList" resultType="String" >
		SELECT EI.EMP_INFO_EMP_NO
  		  FROM SIGN SI
 		  JOIN SIGN_JOIN SJ ON(SJ.SIGN_CODE = SI.SIGN_CODE)
  		  JOIN EMP_INFO EI ON(EI.EMP_INFO_EMP_NO = SJ.SIGN_JOIN_EMP_CODE)
  		  JOIN JOB_INFO JI ON(JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
 		 WHERE SJ.SIGN_JOIN_TYPE = 'Y'
   		   AND SI.SIGN_CODE = #{signCode}
 		 ORDER BY JI.JOB_INFO_CODE ASC
	</select>	
	
 	<select id="signModifyWList" resultType="String" >
		SELECT EI.EMP_INFO_EMP_NO
  		  FROM SIGN SI
 		  JOIN SIGN_JOIN SJ ON(SJ.SIGN_CODE = SI.SIGN_CODE)
  		  JOIN EMP_INFO EI ON(EI.EMP_INFO_EMP_NO = SJ.SIGN_JOIN_EMP_CODE)
  		  JOIN JOB_INFO JI ON(JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
 		 WHERE SJ.SIGN_JOIN_TYPE = 'N'
   		   AND SI.SIGN_CODE = #{signCode}
 		 ORDER BY JI.JOB_INFO_CODE ASC
	</select>
	
	<select id="signFileList" resultType="signFiles" parameterType="String">
		SELECT FILES_CODE
     	     , FILES_ONAME
  		     , FILES_CNAME
     		 , FILES_ROUTE
     		 , FILES_DATE
     		 , FILES_TYPE
     		 , FILES_STATUS
     		 , CASE WHEN MOD(FILES_SIZE, 1024) &gt; 1024 THEN CONCAT(TRUNC(FILES_SIZE/1024, 2), ' MB')
            		WHEN MOD(FILES_SIZE, 1024) &lt; 1024 THEN CONCAT(TRUNC(FILES_SIZE/1024, 2), ' KB')
       		    END FILES_SIZE
       	  FROM FILES
		 WHERE FILES_TYPE=#{signCode}
		   AND FILES_STATUS = 'N'
	</select>
	
	<select id="signFileOne"  resultType="signFiles" parameterType="String">
		SELECT *
		  FROM FILES
		 WHERE FILES_CODE=#{fileCode}
		   AND FILES_STATUS = 'N'
	</select>
<!-- 	<update id="signModify" parameterType="signWriteInsert">
		
	</update> -->
	
<!-- modify one sign case end -->

	<select id="signTypeContent" resultType="String">
		SELECT SIGN_TYPE_CONTENT 
		  FROM SIGN_TYPE 
		 WHERE SIGN_TYPE_CODE = #{typeCode}
	</select>
	
	<select id="signEmpList" parameterType="String" resultType="signEmpList">
	 	 SELECT EI.EMP_INFO_EMP_NO 
      	 	  , EI.EMP_INFO_NAME
     		  , JI.JOB_INFO_CODE
     		  , JI.JOB_INFO_NAME
              , DI.DEPT_INFO_NAME
              , FI.FILES_ROUTE
  		   FROM EMP_INFO EI
  		   JOIN JOB_INFO JI ON(JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
           JOIN DEPT_INFO DI ON(DI.DEPT_INFO_CODE = EI.EMP_INFO_DEPT_CODE)
LEFT OUTER JOIN FILES FI ON(FI.FILES_TYPE = EI.EMP_INFO_EMP_NO)
		  WHERE EI.EMP_INFO_EDAT IS NULL
		  AND NOT(EI.EMP_INFO_EMP_NO = #{empCode})
 	      ORDER BY JI.JOB_INFO_CODE ASC
	</select>
<!-- signWrite page mapper end -->

<!-- select SignSelectOne signResult start -->
	<select id="signResult" resultType="signReply">
		SELECT SR.SIGN_REPLY_CODE
   		     , SR.SIGN_REPLY_DATE
   		     , SR.SIGN_REPLY_CONTENT
   		     , EI.EMP_INFO_NAME
     		 , JI.JOB_INFO_NAME
  		  FROM SIGN_REPLY SR
  		  JOIN EMP_INFO EI ON(EI.EMP_INFO_EMP_NO = SR.SIGN_REPLY_EMP_CODE)
  		  JOIN JOB_INFO JI ON(JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
 		 WHERE SIGN_REPLY_SIGN_CODE = #{signCode}
 		   AND SIGN_REPLY_TYPE = '2'		
	</select>
<!-- select SignSelectOne signResult end -->


<!-- select signSelectOne reply start-->
	<select id="signReply" resultType="signReply">
		SELECT SR.SIGN_REPLY_CODE
   		     , SR.SIGN_REPLY_DATE
   		     , SR.SIGN_REPLY_CONTENT
   		     , EI.EMP_INFO_NAME
     		 , JI.JOB_INFO_NAME
  		  FROM SIGN_REPLY SR
  		  JOIN EMP_INFO EI ON(EI.EMP_INFO_EMP_NO = SR.SIGN_REPLY_EMP_CODE)
  		  JOIN JOB_INFO JI ON(JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
 		 WHERE SIGN_REPLY_SIGN_CODE = #{signCode}
 		   AND SIGN_REPLY_TYPE = '1'
	</select>	
<!-- select signSelectOne reply end -->

<!-- insert signSelectOne reply start -->
	<select id="seqSignReply" resultType="String">
		SELECT SIRC_SEQ.NEXTVAL FROM DUAL
	</select>
	
	<insert id="signReplyInsert" parameterType="map">
		INSERT INTO SIGN_REPLY( SIGN_REPLY_CODE
                      		  , SIGN_REPLY_SIGN_CODE
                      		  , SIGN_REPLY_CONTENT
                      	      , SIGN_REPLY_DATE
                     		  , SIGN_REPLY_EMP_CODE
                     		  , SIGN_REPLY_TYPE) VALUES( 'SIRC'||TRIM(TO_CHAR(#{seqSignReply},'000000'))
                                                   		   , #{sign_code}
                                                 		   , #{sign_reply_content}
                                                 		   , SYSDATE
                                                 		   , #{emp_info_emp_code}
                                                 		   , '1')
	</insert>
<!-- insert signSelectOne reply end -->

<!-- insert sign signature start -->
	<insert id="signFilesSignatureInsert" parameterType="map">
		INSERT INTO FILES(FILES_CODE
						, FILES_ONAME
						, FILES_CNAME
						, FILES_ROUTE
						, FILES_DATE
						, FILES_TYPE
						, FILES_STATUS
						, FILES_SIZE) VALUES ('FILE'||TRIM(TO_CHAR(#{seqSignFiles},'000000'))
										   , #{files_oname}
										   , #{files_cname}
										   , #{files_route}
										   , SYSDATE
										   , #{iempCode}
										   , 'N'
										   , #{files_size})
	</insert>
<!-- insert sign signature end -->

<!-- select sign signature count start -->
	<select id="sfsListCount" resultType="int" parameterType="String">
		SELECT COUNT(*)
		  FROM FILES
		 WHERE FILES_STATUS = 'N'
		   AND FILES_TYPE = #{empCode}
	</select>

<!-- select sign signature count end -->

<!-- select sign signature start -->
	<select id="signFilesSignatureList" resultType="signFiles" parameterType="String">
		SELECT FILES_CODE
    		 , FILES_ONAME
    		 , FILES_CNAME
    		 , FILES_ROUTE
    		 , FILES_SIZE
  		  FROM FILES
		 WHERE FILES_TYPE = #{empCode}
 		   AND FILES_STATUS = 'N'
		 ORDER BY FILES_DATE DESC
	</select>
<!-- select sign signature end -->

<!-- select sign signature mini start -->
	<select id="sfsListMini" resultType="signFiles" parameterType="String">
		SELECT *
  		  FROM (SELECT FILES_CODE
    				 , FILES_ONAME
    				 , FILES_CNAME
    				 , FILES_ROUTE
    				 , FILES_SIZE
  		 		  FROM FILES
				 WHERE FILES_TYPE = #{empCode}
 		  		   AND FILES_STATUS = 'N'
				 ORDER BY FILES_DATE DESC
   			   )
    	 WHERE ROWNUM &lt; 5
	</select>
<!-- select sign signature mini end -->

<!-- select sign signature mini2 start -->
	<select id="sfsListMini2" resultType="signFiles" parameterType="String">
		SELECT *
  		  FROM (SELECT FILES_CODE
    				 , FILES_ONAME
    				 , FILES_CNAME
    				 , FILES_ROUTE
    				 , FILES_SIZE
  		 		  FROM FILES
				 WHERE FILES_TYPE = #{empCode}
 		  		   AND FILES_STATUS = 'N'
				 ORDER BY FILES_DATE DESC
   			   )
    	 WHERE ROWNUM &lt; 6
	</select>
<!-- select sign signature mini2 end -->

<!-- uodate signDecision start -->
	<!-- one person agrees to sign -->
	<update id="sjDecisionAgree" parameterType="map">
		UPDATE SIGN_JOIN 
   		   SET SIGN_JOIN_CHECK = 'Y'
   		   	 , SIGN_JOIN_DATE = SYSDATE
 		 WHERE SIGN_CODE = #{signCode}
  		   AND SIGN_JOIN_EMP_CODE = #{empCode}		
	</update>

	<!-- count sign joiner -->
	<select id="sjDecisionCount" parameterType="String" resultType="SignJoinerCount">
		SELECT SI.SIGN_OCOUNT
   		     , (SELECT COUNT (*)
        		  FROM SIGN_JOIN
        		 WHERE SIGN_JOIN_TYPE = 'Y'
         		   AND SIGN_JOIN_CHECK = 'N'
         		   AND SIGN_CODE = #{signCode}) AS SIGN_COUNT
  		  FROM SIGN SI
 		 WHERE SIGN_CODE = #{signCode}
	</select>

	<!-- CASE1 START -->
	<!-- insert sign process when count -1 -->
	<insert id="signProcessAdd2" parameterType="String">
		INSERT INTO SIGN_PROCESS VALUES('SIPC000002'
				  , #{sign_code}
				  , SYSDATE)
	</insert>
	
	<!-- update sign when count -1 and status continue -->
	<update id="signGo" parameterType="String">
		UPDATE SIGN
  		   SET SIGN_STEP = 'SIPC000002'
     	     , SIGN_COUNT = SIGN_COUNT - 1
 		 WHERE SIGN_CODE = #{signCode}
	</update>
	<!-- CASE1 END -->


	<!-- CASE2 START -->
	<!-- insert sign process when count finish -->
	<insert id="signProcessAdd3" parameterType="String">
		INSERT INTO SIGN_PROCESS VALUES('SIPC000003'
				  , #{sign_code}
				  , SYSDATE)
	</insert>
	
	<!-- update sign when count finish and status finish -->
	<update id="signComplete" parameterType="String">
		UPDATE SIGN
		   SET SIGN_STEP = 'SIPC000003'
		     , SIGN_COUNT = '0'
		     , SIGN_EDAT = SYSDATE
		 WHERE SIGN_CODE = #{signCode}
	</update>
	<!-- CASE2 END -->
	
	
	<!-- CASE3 START -->
	<!-- update sign process when count -1 default -->
	<update id="signContinue" parameterType="String">
		UPDATE SIGN
		   SET SIGN_COUNT = SIGN_COUNT - 1
		 WHERE SIGN_CODE = #{signCode}
	</update>
	<!-- CASE3 END -->

	
	<!-- insert signResult -->
	<insert id="signResultInsert" parameterType="String">
		INSERT INTO SIGN_REPLY( SIGN_REPLY_CODE
                      		  , SIGN_REPLY_SIGN_CODE
                      		  , SIGN_REPLY_CONTENT
                      	      , SIGN_REPLY_DATE
                     		  , SIGN_REPLY_EMP_CODE
                     		  , SIGN_REPLY_TYPE) VALUES( 'SIRC'||TRIM(TO_CHAR(#{seqSignReply},'000000'))
                                                   		   , #{sign_code}
                                                 		   , #{sign_reply_content}
                                                 		   , SYSDATE
                                                 		   , #{emp_info_emp_code}
                                                 		   , '2')	
	</insert>
	
	<!-- update delete signFileSignature -->
	<update id="sfsDelete" parameterType="String">
		UPDATE FILES
  		   SET FILES_STATUS = 'Y'
 		 WHERE FILES_CODE = #{fileCode}
	</update>
<!-- update signDecision end -->


<!-- select signListAll and Paging start -->
	<select id="signListAllCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
 		  FROM SIGN SI
		  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		  JOIN SIGN_JOIN SJ ON (SJ.SIGN_CODE = SI.SIGN_CODE)
		 WHERE SI.SIGN_EDAT IS NULL
  		   AND SI.SIGN_STATUS = 'N'
  		   AND (SJ.SIGN_JOIN_EMP_CODE = #{empCode} OR SI.SIGN_EMP_CODE = #{empCode})
	</select>

	<select id="signListAll" parameterType="map" resultType="signList">
		SELECT RNUM
    		 , SIGN_CODE
    		 , SIGN_TYPE_NAME
    		 , SIGN_TITLE
    		 , EMP_INFO_NAME
    		 , JOB_INFO_NAME
    		 , SIGN_WDAT
    		 , SIGN_WHOUR
    		 , SIGN_EDAT
    		 , SIGN_EHOUR
    		 , SIGN_STEP
    		 , SIGN_COUNT
 		  FROM (SELECT ROWNUM RNUM
            		 , SIGN_CODE
           			 , SIGN_TYPE_NAME
            		 , SIGN_TITLE
            		 , EMP_INFO_NAME
            		 , JOB_INFO_NAME
            		 , SIGN_WDAT
            		 , SIGN_WHOUR
            		 , SIGN_EDAT
            		 , SIGN_EHOUR
            		 , SIGN_STEP
            		 , SIGN_COUNT
         		  FROM (SELECT SI.SIGN_CODE
		   		    		 , ST.SIGN_TYPE_NAME
    						 , SI.SIGN_TITLE
    						 , EI.EMP_INFO_NAME
    						 , JI.JOB_INFO_NAME
    						 , TO_CHAR(SI.SIGN_WDAT, 'yyyy-mm-dd') AS SIGN_WDAT
            				 , TO_CHAR(SI.SIGN_WDAT, 'hh:dd') AS SIGN_WHOUR
    						 , TO_CHAR(SI.SIGN_EDAT, 'yyyy-mm-dd') AS SIGN_EDAT
            				 , TO_CHAR(SI.SIGN_EDAT, 'hh:dd') AS SIGN_EHOUR
            				 , SI.SIGN_STEP
            				 , SI.SIGN_COUNT
 		 		 		  FROM SIGN SI
 				 		  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		 		  		  JOIN JOB_INFO JI ON (JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
  						  JOIN SIGN_TYPE ST ON (ST.SIGN_TYPE_CODE = SI.SIGN_TYPE_CODE)
               			  JOIN SIGN_JOIN SJ ON (SJ.SIGN_CODE = SI.SIGN_CODE)
 						 WHERE SI.SIGN_EDAT IS NULL
 			     		   AND (SJ.SIGN_JOIN_EMP_CODE = #{empCode} OR SI.SIGN_EMP_CODE = #{empCode})
               			 GROUP BY SI.SIGN_CODE
                	   		    , ST.SIGN_TYPE_NAME
                        		, SI.SIGN_TITLE
    							, EI.EMP_INFO_NAME
                        		, JI.JOB_INFO_NAME
    				    		, SI.SIGN_WDAT
            		    		, SI.SIGN_WDAT
    				    		, SI.SIGN_EDAT
            		    		, SI.SIGN_EDAT
            		    		, SI.SIGN_STEP
            		    		, SI.SIGN_COUNT
 			   		     ORDER BY SI.SIGN_CODE DESC
                		)
        		)
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>

<!-- select signListAll and Paging end -->


<!-- select signListWait and Paging start -->
	<select id="signListWaitCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
 		  FROM SIGN SI
		  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		  JOIN SIGN_JOIN SJ ON (SJ.SIGN_CODE = SI.SIGN_CODE)
		 WHERE SI.SIGN_STEP = 'SIPC000001'
  		   AND SI.SIGN_STATUS = 'N'
  		   AND (SJ.SIGN_JOIN_EMP_CODE = #{empCode} OR SI.SIGN_EMP_CODE = #{empCode})
	</select>

	<select id="signListWait" parameterType="map" resultType="signList">
		SELECT RNUM
    		 , SIGN_CODE
    		 , SIGN_TYPE_NAME
    		 , SIGN_TITLE
    		 , EMP_INFO_NAME
    		 , JOB_INFO_NAME
    		 , SIGN_WDAT
    		 , SIGN_WHOUR
    		 , SIGN_EDAT
    		 , SIGN_EHOUR
    		 , SIGN_STEP
    		 , SIGN_COUNT
 		  FROM (SELECT ROWNUM RNUM
            		 , SIGN_CODE
           			 , SIGN_TYPE_NAME
            		 , SIGN_TITLE
            		 , EMP_INFO_NAME
            		 , JOB_INFO_NAME
            		 , SIGN_WDAT
            		 , SIGN_WHOUR
            		 , SIGN_EDAT
            		 , SIGN_EHOUR
            		 , SIGN_STEP
            		 , SIGN_COUNT
         		  FROM (SELECT SI.SIGN_CODE
		   		    		 , ST.SIGN_TYPE_NAME
    						 , SI.SIGN_TITLE
    						 , EI.EMP_INFO_NAME
    						 , JI.JOB_INFO_NAME
    						 , TO_CHAR(SI.SIGN_WDAT, 'yyyy-mm-dd') AS SIGN_WDAT
            				 , TO_CHAR(SI.SIGN_WDAT, 'hh:dd') AS SIGN_WHOUR
    						 , TO_CHAR(SI.SIGN_EDAT, 'yyyy-mm-dd') AS SIGN_EDAT
            				 , TO_CHAR(SI.SIGN_EDAT, 'hh:dd') AS SIGN_EHOUR
            				 , SI.SIGN_STEP
            				 , SI.SIGN_COUNT
 		 		 		  FROM SIGN SI
 				 		  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		 		  		  JOIN JOB_INFO JI ON (JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
  						  JOIN SIGN_TYPE ST ON (ST.SIGN_TYPE_CODE = SI.SIGN_TYPE_CODE)
               			  JOIN SIGN_JOIN SJ ON (SJ.SIGN_CODE = SI.SIGN_CODE)
 						 WHERE SI.SIGN_STEP = 'SIPC000001'
 			     		   AND (SJ.SIGN_JOIN_EMP_CODE = #{empCode} OR SI.SIGN_EMP_CODE = #{empCode})
               			 GROUP BY SI.SIGN_CODE
                	   		    , ST.SIGN_TYPE_NAME
                        		, SI.SIGN_TITLE
    							, EI.EMP_INFO_NAME
                        		, JI.JOB_INFO_NAME
    				    		, SI.SIGN_WDAT
            		    		, SI.SIGN_WDAT
    				    		, SI.SIGN_EDAT
            		    		, SI.SIGN_EDAT
            		    		, SI.SIGN_STEP
            		    		, SI.SIGN_COUNT
 			   		     ORDER BY SI.SIGN_CODE DESC
                		)
        		)
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>

<!-- select signListWait and Paging end -->


<!-- select signListProcess and Paging start -->
	<select id="signListProcessCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
 		  FROM SIGN SI
		  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		  JOIN SIGN_JOIN SJ ON (SJ.SIGN_CODE = SI.SIGN_CODE)
		 WHERE SI.SIGN_STEP = 'SIPC000002'
  		   AND SI.SIGN_STATUS = 'N'
  		   AND (SJ.SIGN_JOIN_EMP_CODE = #{empCode} OR SI.SIGN_EMP_CODE = #{empCode})
	</select>

	<select id="signListProcess" parameterType="map" resultType="signList">
		SELECT RNUM
    		 , SIGN_CODE
    		 , SIGN_TYPE_NAME
    		 , SIGN_TITLE
    		 , EMP_INFO_NAME
    		 , JOB_INFO_NAME
    		 , SIGN_WDAT
    		 , SIGN_WHOUR
    		 , SIGN_EDAT
    		 , SIGN_EHOUR
    		 , SIGN_STEP
    		 , SIGN_COUNT
 		  FROM (SELECT ROWNUM RNUM
            		 , SIGN_CODE
           			 , SIGN_TYPE_NAME
            		 , SIGN_TITLE
            		 , EMP_INFO_NAME
            		 , JOB_INFO_NAME
            		 , SIGN_WDAT
            		 , SIGN_WHOUR
            		 , SIGN_EDAT
            		 , SIGN_EHOUR
            		 , SIGN_STEP
            		 , SIGN_COUNT
         		  FROM (SELECT SI.SIGN_CODE
		   		    		 , ST.SIGN_TYPE_NAME
    						 , SI.SIGN_TITLE
    						 , EI.EMP_INFO_NAME
    						 , JI.JOB_INFO_NAME
    						 , TO_CHAR(SI.SIGN_WDAT, 'yyyy-mm-dd') AS SIGN_WDAT
            				 , TO_CHAR(SI.SIGN_WDAT, 'hh:dd') AS SIGN_WHOUR
    						 , TO_CHAR(SI.SIGN_EDAT, 'yyyy-mm-dd') AS SIGN_EDAT
            				 , TO_CHAR(SI.SIGN_EDAT, 'hh:dd') AS SIGN_EHOUR
            				 , SI.SIGN_STEP
            				 , SI.SIGN_COUNT
 		 		 		  FROM SIGN SI
 				 		  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		 		  		  JOIN JOB_INFO JI ON (JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
  						  JOIN SIGN_TYPE ST ON (ST.SIGN_TYPE_CODE = SI.SIGN_TYPE_CODE)
               			  JOIN SIGN_JOIN SJ ON (SJ.SIGN_CODE = SI.SIGN_CODE)
 						 WHERE SI.SIGN_STEP = 'SIPC000002'
 			     		   AND (SJ.SIGN_JOIN_EMP_CODE = #{empCode} OR SI.SIGN_EMP_CODE = #{empCode})
               			 GROUP BY SI.SIGN_CODE
                	   		    , ST.SIGN_TYPE_NAME
                        		, SI.SIGN_TITLE
    							, EI.EMP_INFO_NAME
                        		, JI.JOB_INFO_NAME
    				    		, SI.SIGN_WDAT
            		    		, SI.SIGN_WDAT
    				    		, SI.SIGN_EDAT
            		    		, SI.SIGN_EDAT
            		    		, SI.SIGN_STEP
            		    		, SI.SIGN_COUNT
 			   		     ORDER BY SI.SIGN_CODE DESC
                		)
        		)
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>

<!-- select signListProcess and Paging end -->


<!-- select signListDenied and Paging start -->
	<select id="signListDeniedCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
 		  FROM SIGN SI
		  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		  JOIN SIGN_JOIN SJ ON (SJ.SIGN_CODE = SI.SIGN_CODE)
		 WHERE SI.SIGN_STEP = 'SIPC000004'
  		   AND SI.SIGN_STATUS = 'N'
  		   AND (SJ.SIGN_JOIN_EMP_CODE = #{empCode} OR SI.SIGN_EMP_CODE = #{empCode})
	</select>

	<select id="signListDenied" parameterType="map" resultType="signList">
		SELECT RNUM
    		 , SIGN_CODE
    		 , SIGN_TYPE_NAME
    		 , SIGN_TITLE
    		 , EMP_INFO_NAME
    		 , JOB_INFO_NAME
    		 , SIGN_WDAT
    		 , SIGN_WHOUR
    		 , SIGN_EDAT
    		 , SIGN_EHOUR
    		 , SIGN_STEP
    		 , SIGN_COUNT
 		  FROM (SELECT ROWNUM RNUM
            		 , SIGN_CODE
           			 , SIGN_TYPE_NAME
            		 , SIGN_TITLE
            		 , EMP_INFO_NAME
            		 , JOB_INFO_NAME
            		 , SIGN_WDAT
            		 , SIGN_WHOUR
            		 , SIGN_EDAT
            		 , SIGN_EHOUR
            		 , SIGN_STEP
            		 , SIGN_COUNT
         		  FROM (SELECT SI.SIGN_CODE
		   		    		 , ST.SIGN_TYPE_NAME
    						 , SI.SIGN_TITLE
    						 , EI.EMP_INFO_NAME
    						 , JI.JOB_INFO_NAME
    						 , TO_CHAR(SI.SIGN_WDAT, 'yyyy-mm-dd') AS SIGN_WDAT
            				 , TO_CHAR(SI.SIGN_WDAT, 'hh:dd') AS SIGN_WHOUR
    						 , TO_CHAR(SI.SIGN_EDAT, 'yyyy-mm-dd') AS SIGN_EDAT
            				 , TO_CHAR(SI.SIGN_EDAT, 'hh:dd') AS SIGN_EHOUR
            				 , SI.SIGN_STEP
            				 , SI.SIGN_COUNT
 		 		 		  FROM SIGN SI
 				 		  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		 		  		  JOIN JOB_INFO JI ON (JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
  						  JOIN SIGN_TYPE ST ON (ST.SIGN_TYPE_CODE = SI.SIGN_TYPE_CODE)
               			  JOIN SIGN_JOIN SJ ON (SJ.SIGN_CODE = SI.SIGN_CODE)
 						 WHERE SI.SIGN_STEP = 'SIPC000004'
 			     		   AND (SJ.SIGN_JOIN_EMP_CODE = #{empCode} OR SI.SIGN_EMP_CODE = #{empCode})
               			 GROUP BY SI.SIGN_CODE
                	   		    , ST.SIGN_TYPE_NAME
                        		, SI.SIGN_TITLE
    							, EI.EMP_INFO_NAME
                        		, JI.JOB_INFO_NAME
    				    		, SI.SIGN_WDAT
            		    		, SI.SIGN_WDAT
    				    		, SI.SIGN_EDAT
            		    		, SI.SIGN_EDAT
            		    		, SI.SIGN_STEP
            		    		, SI.SIGN_COUNT
 			   		     ORDER BY SI.SIGN_CODE DESC
                		)
        		)
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>

<!-- select signListDenied and Paging end -->


<!-- select signListComplete and Paging start -->
	<select id="signListCompleteCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
 		  FROM SIGN SI
		  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		  JOIN SIGN_JOIN SJ ON (SJ.SIGN_CODE = SI.SIGN_CODE)
		 WHERE SI.SIGN_STEP = 'SIPC000003'
  		   AND SI.SIGN_STATUS = 'N'
  		   AND (SJ.SIGN_JOIN_EMP_CODE = #{empCode} OR SI.SIGN_EMP_CODE = #{empCode})
	</select>

	<select id="signListComplete" parameterType="map" resultType="signList">
		SELECT RNUM
    		 , SIGN_CODE
    		 , SIGN_TYPE_NAME
    		 , SIGN_TITLE
    		 , EMP_INFO_NAME
    		 , JOB_INFO_NAME
    		 , SIGN_WDAT
    		 , SIGN_WHOUR
    		 , SIGN_EDAT
    		 , SIGN_EHOUR
    		 , SIGN_STEP
    		 , SIGN_COUNT
 		  FROM (SELECT ROWNUM RNUM
            		 , SIGN_CODE
           			 , SIGN_TYPE_NAME
            		 , SIGN_TITLE
            		 , EMP_INFO_NAME
            		 , JOB_INFO_NAME
            		 , SIGN_WDAT
            		 , SIGN_WHOUR
            		 , SIGN_EDAT
            		 , SIGN_EHOUR
            		 , SIGN_STEP
            		 , SIGN_COUNT
         		  FROM (SELECT SI.SIGN_CODE
		   		    		 , ST.SIGN_TYPE_NAME
    						 , SI.SIGN_TITLE
    						 , EI.EMP_INFO_NAME
    						 , JI.JOB_INFO_NAME
    						 , TO_CHAR(SI.SIGN_WDAT, 'yyyy-mm-dd') AS SIGN_WDAT
            				 , TO_CHAR(SI.SIGN_WDAT, 'hh:dd') AS SIGN_WHOUR
    						 , TO_CHAR(SI.SIGN_EDAT, 'yyyy-mm-dd') AS SIGN_EDAT
            				 , TO_CHAR(SI.SIGN_EDAT, 'hh:dd') AS SIGN_EHOUR
            				 , SI.SIGN_STEP
            				 , SI.SIGN_COUNT
 		 		 		  FROM SIGN SI
 				 		  JOIN EMP_INFO EI ON (EI.EMP_INFO_EMP_NO = SI.SIGN_EMP_CODE)
 		 		  		  JOIN JOB_INFO JI ON (JI.JOB_INFO_CODE = EI.EMP_INFO_JOB_CODE)
  						  JOIN SIGN_TYPE ST ON (ST.SIGN_TYPE_CODE = SI.SIGN_TYPE_CODE)
               			  JOIN SIGN_JOIN SJ ON (SJ.SIGN_CODE = SI.SIGN_CODE)
 						 WHERE SI.SIGN_STEP = 'SIPC000003'
 			     		   AND (SJ.SIGN_JOIN_EMP_CODE = #{empCode} OR SI.SIGN_EMP_CODE = #{empCode})
               			 GROUP BY SI.SIGN_CODE
                	   		    , ST.SIGN_TYPE_NAME
                        		, SI.SIGN_TITLE
    							, EI.EMP_INFO_NAME
                        		, JI.JOB_INFO_NAME
    				    		, SI.SIGN_WDAT
            		    		, SI.SIGN_WDAT
    				    		, SI.SIGN_EDAT
            		    		, SI.SIGN_EDAT
            		    		, SI.SIGN_STEP
            		    		, SI.SIGN_COUNT
 			   		     ORDER BY SI.SIGN_CODE DESC
                		)
        		)
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>

<!-- select signListComplete and Paging end -->


<!-- signDenied start -->
	<insert id="signProcessAdd4" parameterType="String">
		INSERT INTO SIGN_PROCESS VALUES('SIPC000004'
				  , #{sign_code}
				  , SYSDATE)	
	</insert>
	
	
	<delete id="signProcessDel2" parameterType="String">
		DELETE
  		  FROM SIGN_PROCESS
		 WHERE SIGN_PRO_CODE = 'SIPC000001'
   		   AND SIGN_CODE = #{signCode}
	</delete>
	
	<update id="signDenied" parameterType="String">
		UPDATE SIGN
		   SET SIGN_STEP = 'SIPC000004'
		 WHERE SIGN_CODE = #{signCode}
	</update>
<!-- signDenied end -->

<!-- update signModify start -->
	<update id="signModifyUpdate" parameterType="signWriteInsert">
		UPDATE SIGN
		   SET SIGN_TITLE = #{sign_title}
		     , SIGN_TYPE_CODE = #{sign_type_code}
		     , SIGN_ACC = #{sign_acc}
		     , SIGN_KEEP = SYSDATE+#{sign_keep}
		     , SIGN_NOTE = #{sign_note}
		 WHERE SIGN_CODE = #{sign_code}
	</update>
	
	<delete id="signProcessDel4" parameterType="String">
		DELETE
  		  FROM SIGN_PROCESS
 		 WHERE SIGN_PRO_CODE = 'SIPC000004'
  		   AND SIGN_CODE = #{signCode}
	</delete>
	
	<update id="signProcessAdd5" parameterType="String">
		UPDATE SIGN
		   SET SIGN_STEP = 'SIPC000002'
		 WHERE SIGN_CODE = #{signCode}
	</update>
	
	<delete id="signReplyDelete" parameterType="String">
		DELETE
		  FROM SIGN_REPLY
		 WHERE SIGN_REPLY_CODE = #{replyCode}
	</delete>


<!-- result signType start -->
	<select id="signTemplateList" resultType="signType">
		SELECT *
		  FROM (SELECT SIGN_TYPE_NAME
		  			 , SIGN_TYPE_CODE
		  			 , SIGN_TYPE_CONTENT
  		  		  FROM SIGN_TYPE
  		  	  ORDER BY SIGN_TYPE_CODE DESC
  		  	   )
  		 WHERE ROWNUM &lt; 10
	</select>

<!-- Result signTypeSelectOne start -->
	<select id="signTypeSelectOne" parameterType="String" resultType="signType">
		SELECT *
	      FROM SIGN_TYPE
	     WHERE SIGN_TYPE_CODE = #{typeCode}
	</select>


<!-- Result seqSignType start -->
	<select id="seqSignType" resultType="String">
		SELECT SITC_SEQ.NEXTVAL FROM DUAL
	</select>


<!-- insert signType start -->
	<insert id="signTypeInsert"	parameterType="map">
		INSERT INTO SIGN_TYPE (sign_type_code
							 , sign_type_name
							 , sign_type_content) VALUES ('SITC'||TRIM(TO_CHAR(#{seqSignType},'000000'))
								   , #{sign_type_name}
								   , #{sign_type_content})
	</insert>
	
<!-- delete signType start -->
	<delete id="signTypeDelete" parameterType="String">
		DELETE
		  FROM SIGN_TYPE
		 WHERE SIGN_TYPE_CODE = #{typeCode}
	</delete>
	
<!-- select signReplyOwner -->
	<select id="signReplyOwner" parameterType="String" resultType="String">
		SELECT SIGN_REPLY_EMP_CODE
  		  FROM SIGN_REPLY
 		 WHERE SIGN_REPLY_CODE = #{replyCode}
	</select>
</mapper>